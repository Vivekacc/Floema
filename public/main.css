/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

a {
  text-decoration: none;
  color: inherit;
  outline: none;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home__link__icon, .home__gallery, .home, .detail__button__icon, .detail__media__image, .detail, .collections__content, .collections__gallery__media__image, .collections__gallery, .collections__wrapper, .collections, .about__highlight__media__image, .about__gallery__media__image, .navigation, .preloader {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.home, .detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail__info__item__title, .detail__info__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
  font-size: 1.2rem;
}
@media (max-width: 768px) {
  .detail__info__item__title, .detail__info__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
    font-size: 3rem;
  }
}

.preloader_number {
  font-size: 1.4rem;
}

.detail__info__item__description, .detail__info__highlight__text, .collections__article__description, body {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 768px) {
  .detail__info__item__description, .detail__info__highlight__text, .collections__article__description, body {
    font-size: 2.8rem;
  }
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2rem;
}
@media (max-width: 768px) {
  .navigation__list__link {
    font-size: 4.8rem;
  }
}

.detail__info__link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 768px) {
  .detail__info__link {
    font-size: 5.2rem;
  }
}

.preloader__text {
  font-family: "George X";
  font-size: 5.3rem;
}

.collections__article__title {
  font-family: "George X";
  font-size: 6rem;
}

.about__title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}
@media (max-width: 768px) {
  .about__title {
    font-size: 12rem;
  }
}

.detail__info__title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}
@media (max-width: 768px) {
  .detail__info__title {
    font-size: 18rem;
  }
}

.about__highlight__title, .home__titles__title, .collections__titles__title {
  font-family: "George X";
  font-size: 20rem;
}

.home__titles, .collections__titles {
  position: absolute;
  align-items: center;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
  display: flex;
}

.home__titles__label, .collections__titles__label {
  letter-spacing: 0.1rem;
  margin: 0 3rem;
  text-align: center;
  text-transform: uppercase;
  transform: rotate(90deg);
}
@media (max-width: 768px) {
  .home__titles__label, .collections__titles__label {
    font-size: 1.2rem;
  }
}

.home__titles__title, .collections__titles__title {
  padding-top: 2rem;
}

@font-face {
  font-family: "George X";
  src: url(george-x-regular.d30303d83b7386718693..woff2) format("woff2"), url(george-x-regular.a6cabe86c551e4845660..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-regular.503e6f67767df9259a5f..woff2) format("woff2"), url(suisse-bp-regular.476bf785b9a1a090c8a5..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url("//db.onlinewebfonts.com/t/03d5b20d124cd26dc873bd4a8e42313e.woff2") format("woff2"), url("//db.onlinewebfonts.com/t/03d5b20d124cd26dc873bd4a8e42313e.woff") format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url("https://db.onlinewebfonts.com/t/88f10bf18a36407ef36bf30bc25a3618.woff2") format("woff2"), url("https://db.onlinewebfonts.com/t/88f10bf18a36407ef36bf30bc25a3618.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
html {
  font-size: 0.5208333333vw;
  line-height: 1;
}
@media (max-width: 768px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Suisse BP";
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  cursor: pointer;
  outline: none;
  color: inherit;
  z-index: 2;
}

img {
  vertical-align: middle;
}

.preloader {
  background-color: #C97164;
  color: #F9F1E9;
  text-align: center;
  display: none;
  z-index: 3;
}

.preloader__text {
  line-height: 1;
  max-width: 66rem;
}

.preloader_number {
  bottom: 7.3rem;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
}
@media (max-width: 768px) {
  .preloader_number {
    font-size: 3.2rem;
  }
}

.navigation {
  color: #F9F1E9;
  z-index: 2;
  position: fixed;
  pointer-events: none;
}

.navigation__link {
  font-size: 0;
  height: 2rem;
  left: 4rem;
  position: absolute;
  top: 4rem;
  width: 12.8rem;
  pointer-events: auto;
}
@media (max-width: 768px) {
  .navigation__link {
    height: 4.3rem;
    left: 5rem;
    top: 5rem;
    width: 23.2rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  top: 4rem;
  pointer-events: auto;
}

.about {
  background: #B2BBC3;
  color: #37384C;
}

.about__title {
  margin: auto;
  max-width: 124rem;
  text-align: center;
}
@media (max-width: 768px) {
  .about__title {
    max-width: 67.7rem;
  }
}

.about__content {
  display: flex;
  justify-content: center;
  margin: 20rem auto;
  position: relative;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}
@media (max-width: 768px) {
  .about__content:nth-child(5) {
    justify-content: flex-end;
  }
  .about__content:nth-child(8) {
    justify-content: center;
  }
}

.about__content__wrapper {
  display: flex;
}
.about__content:nth-child(3) .about__content__wrapper {
  align-items: center;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}
@media (max-width: 768px) {
  .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content--right .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(5) .about__content__wrapper {
    flex-direction: column;
  }
}

.about__content__box {
  display: flex;
}
@media (max-width: 768px) {
  .about__content__box {
    width: 60rem;
    margin: 10rem auto;
  }
  .about__content:nth-child(3) .about__content__box {
    margin: 10rem;
  }
}

.about__content__label {
  text-transform: uppercase;
  width: 18rem;
}
@media (max-width: 768px) {
  .about__content__label {
    font-size: 2.4rem;
    width: 15rem;
  }
  .about__content:nth-child(8) .about__content__label {
    width: auto;
  }
  .about__content:nth-child(9) .about__content__label {
    word-break: inherit;
  }
}

.about__content__description {
  width: 36.2rem;
}
@media (max-width: 768px) {
  .about__content__description {
    width: calc(100% - 15rem);
  }
}
.about__content__description p:not(:first-child) {
  margin-top: 4rem;
}

.about__content:nth-child(3) .about__content__media {
  height: 80.8rem;
  margin-left: 18rem;
  position: relative;
  width: 53.8rem;
}
.about__content:nth-child(5) .about__content__media {
  margin-left: 18rem;
  height: 60rem;
  width: 96rem;
}
.about__content:nth-child(8) .about__content__media {
  height: 52rem;
  margin-right: 12rem;
  width: 84.2rem;
}
.about__content:nth-child(9) .about__content__media {
  height: 85rem;
  margin-left: 22rem;
  width: 60rem;
}
@media (max-width: 768px) {
  .about__content:nth-child(3) .about__content__media {
    height: 91.4rem;
    width: 60rem;
    margin: 0;
  }
  .about__content:nth-child(5) .about__content__media {
    margin: 0;
    height: 50rem;
    width: 100%;
  }
  .about__content:nth-child(8) .about__content__media {
    margin: 0;
    width: 100vw;
  }
  .about__content:nth-child(9) .about__content__media {
    margin: 0;
  }
}

.about__content__media__image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.about__gallery {
  height: 58.6rem;
  margin: 20rem 0;
  position: relative;
  overflow: hidden;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  align-items: center;
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  height: 43.7rem;
  margin: 0 4rem;
  position: relative;
  width: 30.9rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}

.about__highlight__wrapper {
  height: 104rem;
  margin: auto;
  position: relative;
  width: 144rem;
}
.about__highlight:nth-child(4) .about__highlight__wrapper {
  width: 104rem;
}
@media (max-width: 768px) {
  .about__highlight__wrapper {
    width: 100%;
  }
  .about__highlight:nth-child(4) .about__highlight__wrapper {
    height: 119rem;
    width: 100%;
  }
  .about__highlight:last-child .about__highlight__wrapper {
    height: 316.2rem;
  }
}

.about__highlight__label {
  left: 50%;
  letter-spacing: 0.1rem;
  position: absolute;
  top: 9rem;
  width: 9.6rem;
  transform: translateX(-50%);
  text-align: center;
  text-transform: uppercase;
}
@media (max-width: 768px) {
  .about__highlight:last-child .about__highlight__label {
    font-size: 2.4rem;
    width: 19rem;
    top: 87rem;
  }
}

.about__highlight__title {
  padding-bottom: 2rem;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
  position: absolute;
}
@media (max-width: 768px) {
  .about__highlight__title {
    font-size: 30rem;
  }
}

.about__highlight__media {
  height: 70rem;
  position: absolute;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  right: 0;
  bottom: 0;
}
@media (max-width: 768px) {
  .about__highlight:last-child .about__highlight__media:first-child {
    left: 50%;
    transform: translateX(-50%);
  }
  .about__highlight:last-child .about__highlight__media:last-child {
    left: 50%;
    transform: translateX(-50%);
    bottom: 10rem;
  }
}

.about__highlight__media__image {
  object-fit: cover;
}

.collections {
  background: #BC978C;
  color: #F9F1E9;
}

.collections__wrapper {
  overflow: hidden;
}

@media (max-width: 768px) {
  .collections__titles {
    display: none;
  }
}

.collections__gallery__wrapper {
  display: flex;
  align-self: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  height: 63.1rem;
  position: relative;
  width: 44.7rem;
}

.collections__gallery__media__image {
  object-fit: cover;
}

@media (max-width: 768px) {
  .collections__content {
    display: none;
  }
}

.collections__article {
  bottom: 8rem;
  left: 8rem;
  position: absolute;
  opacity: 0;
}
.collections__article--active {
  opacity: 1;
}

.collections__article__description {
  max-width: 44rem;
}

.collections__mobile {
  display: flex;
  position: absolute;
  bottom: 5rem;
}

.collections__mobile__item {
  padding-left: 5rem;
  width: 100vw;
}

.collections__mobile__item__label {
  font-size: 2rem;
  letter-spacing: 0.1rem;
}

.collections__mobile__item__title {
  font-size: 12rem;
  font-family: "George X";
}

.detail {
  background: #BC978C;
  color: #F9F1E9;
}
@media (max-width: 768px) {
  .detail {
    height: auto;
  }
}

.detail__wrapper {
  align-items: center;
  display: flex;
}
@media (max-width: 768px) {
  .detail__wrapper {
    display: block;
    width: 66rem;
    margin: auto;
    padding: 15rem 0 31.5rem;
  }
}

.detail__media {
  height: 78.2rem;
  position: relative;
  width: 55.4rem;
}
@media (max-width: 768px) {
  .detail__media {
    margin: 0 auto 7.8rem;
    height: 93.8rem;
    width: 100%;
  }
}

.detail__media__image {
  object-fit: cover;
}

.detail__info {
  padding-left: 8.2rem;
}
@media (max-width: 768px) {
  .detail__info {
    padding-left: 0;
  }
}

.detail__info__collection {
  margin-bottom: 4rem;
  text-transform: uppercase;
}

.detail__info__title {
  max-width: 60rem;
}

.detail__info__content {
  padding-left: 18rem;
}
@media (max-width: 768px) {
  .detail__info__content {
    padding-left: 0;
  }
}

.detail__info__highlights {
  margin-top: 6rem;
}

.detail__info__highlight {
  align-items: center;
  display: flex;
}
.detail__info__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__info__highlight__icon {
  border-radius: 50%;
  height: 4rem;
  width: 4rem;
  margin-right: 3.75rem;
}
@media (max-width: 768px) {
  .detail__info__highlight__icon {
    height: 6.9rem;
    width: 7rem;
    margin-right: 8rem;
  }
}

.detail__info__list {
  margin-top: 4rem;
}

.detail__info__item {
  display: flex;
}
.detail__info__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__info__item__title {
  padding-right: 2.5rem;
  width: 10rem;
}
@media (max-width: 768px) {
  .detail__info__item__title {
    width: 15rem;
    padding-right: 5rem;
  }
}

.detail__info__item__description {
  max-width: 44rem;
}

.detail__info__link {
  display: inline-block;
  margin-top: 3rem;
}

.detail__button {
  display: flex;
  align-items: center;
  justify-content: center;
  bottom: 5rem;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
  height: 6rem;
  width: 12.4rem;
}
@media (max-width: 768px) {
  .detail__button {
    width: 26.8rem;
    font-size: 3rem;
    bottom: 12rem;
    height: 13rem;
  }
}

.home {
  background-color: #C97164;
  color: #F9F1E9;
  text-align: center;
  overflow: hidden;
}
.home:before, .home:after {
  content: "";
  height: 24rem;
  left: 0;
  position: absolute;
  width: 100%;
  z-index: 1;
}
.home:before {
  background: linear-gradient(to bottom, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home:after {
  background: linear-gradient(to top, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home__gallery {
  visibility: hidden;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  position: absolute;
  bottom: 5rem;
  justify-content: center;
  align-items: center;
  display: flex;
  left: 50%;
  transform: translateX(-50%);
  height: 6rem;
  width: 28rem;
  z-index: 2;
}
@media (max-width: 768px) {
  .home__link {
    height: 15rem;
    width: 40rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/